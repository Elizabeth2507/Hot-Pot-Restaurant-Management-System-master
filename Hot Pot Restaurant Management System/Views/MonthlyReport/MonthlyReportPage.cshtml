@using Hot_Pot_Restaurant_Management_System.Models.ViewModels;
@model MonthlyReportViewResult
@{ ViewBag.Title = "Monthly report"; Layout = "~/Views/Shared/Report_Layout.cshtml"; }

<style type="text/css">
    .ui-datepicker-calendar {
        display: none;
    }
</style>

<td>
    <div id="divMenu">
        <table id="tableMenu">
            <tr class="trMenu">
                <td class="tdMenu"><a href="~/monthlyreport/currentmonthpage">Monthly report</a></td>
            </tr>
            <tr class="trMenu">
                <td class="tdMenu"><a href="~/monthlyreport/monthlyreportpage?date=@DateTime.Now.ToString("yyyy-MM-dd")">Monthly report</a></td>
            </tr>
        </table>
    </div>
</td>
<td id="tdContent">
    @{ var viewResults = ViewBag.ViewResults as List<MonthlyReportViewResult>; }
    <div class="divQuery">
        @{ Html.BeginForm("MonthlyReportPage", "MonthlyReport", FormMethod.Get, new { id = "formQuery" }); }
        <label for="Date" class="labelQuery">Date</label>
        <input name="Date" class="MonthPicker" type="text" value="@ViewBag.Date.ToString("yyyy-MM")" readonly="readonly"/>

        <input type="submit" value="Inquire" class="inputSubmit" />
        @{ Html.EndForm(); }
    </div>
    <div class="divTable">

        @if (viewResults != null && viewResults.Count() != 0)
        {
            <table class="tableVInventory">
                @foreach (var viewResult in viewResults)
                {
                    <tr>
                        <th colspan="23" class="thVInventory">@viewResult.WarehouseName</th>
                    </tr>           
                    <tr>
                        <th rowspan="2" class="thVInventory">Products</th>
                        <th colspan="3" class="thVInventory">Early month</th>
                        <th colspan="3" class="thVInventory">Purchase</th>
                        <th colspan="3" class="thVInventory">Return</th>
                        <th colspan="3" class="thVInventory">Picking material</th>
                        <th colspan="3" class="thVInventory">Return material</th>
                        <th colspan="3" class="thVInventory">Sales</th>
                        <th rowspan="2" class="thVInventory">Statistics</th>
                        <th colspan="3" class="thVInventory">Inventory</th>
                    </tr>     
                    <tr>
                        <th class="thVInventory">Unit price</th>
                        <th class="thVInventory">Quantity</th>
                        <th class="thVInventory">Total price</th>
                        <th class="thVInventory">Unit price</th>
                        <th class="thVInventory">Quantity</th>
                        <th class="thVInventory">Total price</th>
                        <th class="thVInventory">Unit price</th>
                        <th class="thVInventory">Quantity</th>
                        <th class="thVInventory">Total price</th>
                        <th class="thVInventory">Unit price</th>
                        <th class="thVInventory">Quantity</th>
                        <th class="thVInventory">Total price</th>
                        <th class="thVInventory">Unit price</th>
                        <th class="thVInventory">Quantity</th>
                        <th class="thVInventory">Total price</th>
                        <th class="thVInventory">Unit price</th>
                        <th class="thVInventory">Quantity</th>
                        <th class="thVInventory">Total price</th>
                        <th class="thVInventory">Unit price</th>
                        <th class="thVInventory">Quantity</th>
                        <th class="thVInventory">Total price</th>
                    </tr>
                
                    foreach (var detailsViewResult in viewResult.Details)
                    {
                        var result = @detailsViewResult.StartOfTerm.TotalPrice + detailsViewResult.PurchaseTotalPrice - detailsViewResult.CreditTotalPrice
                            - detailsViewResult.MRequisitionTotalPrice + detailsViewResult.MReturnTotalPrice - detailsViewResult.BillTotalPrice;
                    <tr>
                        <td class="tdVInventory">@detailsViewResult.ProductName</td>
                        <td class="tdVInventory">@detailsViewResult.StartOfTerm.Price.ToString("#0.00")</td>
                        <td class="tdVInventory">@detailsViewResult.StartOfTerm.Amount</td>
                        <td class="tdVInventory">@detailsViewResult.StartOfTerm.TotalPrice</td>
                        <td class="tdVInventory">@detailsViewResult.PurchasePrice.ToString("#0.00")</td>
                        <td class="tdVInventory">@detailsViewResult.PurchaseAmount</td>
                        <td class="tdVInventory">@detailsViewResult.PurchaseTotalPrice</td>
                        <td class="tdVInventory">@detailsViewResult.CreditPrice.ToString("#0.00")</td>
                        <td class="tdVInventory">@detailsViewResult.CreditAmount</td>
                        <td class="tdVInventory">@detailsViewResult.CreditTotalPrice</td>
                        <td class="tdVInventory">@detailsViewResult.MRequisitionPrice.ToString("#0.00")</td>
                        <td class="tdVInventory">@detailsViewResult.MRequisitionAmount</td>
                        <td class="tdVInventory">@detailsViewResult.MRequisitionTotalPrice</td>
                        <td class="tdVInventory">@detailsViewResult.MReturnPrice.ToString("#0.00")</td>
                        <td class="tdVInventory">@detailsViewResult.MReturnAmount</td>
                        <td class="tdVInventory">@detailsViewResult.MReturnTotalPrice</td>
                        <td class="tdVInventory">@detailsViewResult.BillPrice.ToString("#0.00")</td>
                        <td class="tdVInventory">@detailsViewResult.BillAmount</td>
                        <td class="tdVInventory">@detailsViewResult.BillTotalPrice</td>
                        <td class="tdVInventory">@result.ToString("#0.00")</td>
                        <td class="tdVInventory">@detailsViewResult.SListPrice.ToString("#0.00")</td>
                        <td class="tdVInventory">@detailsViewResult.SListAmount</td>
                        <td class="tdVInventory">@detailsViewResult.SListTotalPrice</td>
                    </tr>                        
                    }
                }

            </table>
        }

    </div>
    @{ Html.BeginForm("ReCalculate", "MonthlyReport", new { date = ViewBag.Date.ToString("yyyy-MM") }, FormMethod.Post); }
    <input type="submit" value="重新计算" class="inputSubmit" />
    @{ Html.EndForm(); }
</td>

@section scripts{
    <script>
        $(document).ready(function () {
            $('.MonthPicker').datepicker({
                dateFormat: 'yy-MM',
                closeText: '确定',
                monthNames: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],
                monthNamesShort: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                yearRange: "1996:2036",
                onClose: function () {
                    var month = $("#ui-datepicker-div .ui-datepicker-month option:selected").val();
                    var year = $("#ui-datepicker-div .ui-datepicker-year option:selected").val();
                    $(this).datepicker('setDate', new Date(year, month, 1));
                }
            });

            $('.DatePicker').datepicker({
                dateFormat: 'yy-MM-dd',
                closeText: '确定',
                monthNames: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],
                monthNamesShort: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],
                changeMonth: true,
                changeYear: true,
                showButtonPanel: true,
                yearRange: "1996:2036",
            });
        });
    </script>
}